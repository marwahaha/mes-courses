IMPROVEMENTS
------------
Things to do (at least partialy) at the first occasion when coding something arround the subject

WIP
---
- migrer vers ruby 1.9

TODO
----
- upgrade gems 'bundle update' before starting any dev !
  - try to set very loose version specifiers in Gemfile, let the update specify real version in Gemfile.lock
  - add a rake task to upgrate + test
- migrer à rails 3
- find a way to subclass Devise::SessionsController without cut-and-paste
- see if we could use the special testing features of devise
- faire un matcher pour les path bar
  - peut être deux : un path_bar_element(index, text, url)
  - un autre pour path_bar avec une liste d'elements
- faire un matcher pour les link_to avec du text et une url, faire le tour et l'utiliser partout (checker pour button_to au passage)
- Understand why capybara is now prefered to web steps
  - read this : http://aslakhellesoy.com/post/11055981222/the-training-wheels-came-off
  - upgrade our cucumber steps
- Website:
- Speed up deployment when integrating : in parallel, or asynchronously on another server
- Check the deployment was successful by doing a get to http://app-name.heroku.com and checking the http return status
- add a foreign key from cart_lines -> items
  - move items to a new category instead of deleting them, fix global item search
  - or version the items : check that it will not be too big
- faire un migrate up, migrate down, remigrate up pour valider les migrations dans les 2 sens
- Use tags to segregate remote specs and features
- Write scripts
  - move scripts that don't change the db or the app env in script/XXX
  - see radiant:upgrade task to see how they managed an update or even git ops through rake
  - valider les scripts pendant l'intégration continue en utilisant des vms
- Put everything in the repo : thirdparties source code, dev tools, follow up, marketing … maybe I'll need to have a main git repo with submodules
  - faire du ménage dans les trucs qui ne sert en fait à rien
- Install windows and all browsers with VirtuaBox
- Make a web site where one can check logs of heroku apps
- Utiliser des modules pour faire des namespaces
- Regarder comment accélérer les tests
- Mettre en place des rcov, heckle et autres dans le script d'intégration continue
  - écrire le specdoc dans autotest
- sortir des choses de models
- améliorer les tests cucumber d'imports
  - Créer un vrai dummy store avec des vrais fichiers pour Cucumber
  - faire un truc pour patcher les fichier auchan_direct offline
  - faire un truc pour que mechanize ne passe pas par le file system pendant les tests
- comprendre pourquoi super exception notifier ne prévient pas toujours dans les erreurs cron : faire une appli avec des taches cron et qui embarque tout le code de l'exception notifier, deployer sur heroku et bricoler jusqu'à ce qu'on comprenne, faire un article de blog
- upgrader devise et voir si on peut simplifier l'interacation avec ssl_requirements
- faire un script 'setup' pour le cms
- faire un script pour créer une nouvelle app heroku
- dans store_steps.rb, configurer le store via la classe et pas l'instance du cart_api : ça sera plus simple pour les tests
- ajouter un truc pour cleaner les sessions quand on push une nouvelle version : heroku rake db:sessions:clear

Spikes :
- 2 way associations in active record
- How to control accessibility in models
- Rspec-spies + .ordered, try to add it (wait for rspec 2)
- Regarder ce qu'apporte NoSql pour les problèmes de Foreign Keys
- Evaluer les tests avec moins de mock - try to add an rspec extension creating proxies
  - choisir un test en particulier, le changer et comparer avec l'existant : essayer sur les tests du API Builder
  - regarder ça : http://xtargets.com/2010/03/19/proxy-mocks-with-rspec/
- try to launch ci on heroku (might be a problem with db drop ...)
- see how to test ssl requirements in cucumber and/or local dev : already 3 bugs because of this ! (sign in, cart forward, empty cart)
- Evalutate IceScrum to replace my excel sheet
- spiker des tests cucumber avec javascript (avec l'order view et l'iframe.onload par exemple)

Kanban:
- Simplify marketing metrics and use metrics of the pirates

Ongoing changes :
- Upgrade gems before every feature

CMS:

