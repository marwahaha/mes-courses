IMPROVEMENTS
------------
Things to do (at least partialy) at the first occasion when coding something arround the subject

WIP
---
use RSS and feedburner to send newsletter

TODO
----
Website:
Speed up deployment when integrating : in parallel, or asynchronously on another server
Check the deployment was successful by doing a get to http://app-name.heroku.com and checking the http return status
if integrating versions change (ex of cucumber) it can fail and has to be launched again -> Maybe I should use a ruby script instead of a rake task ... ?
add a foreign key from cart_lines -> items
 - move items to a new category instead of deleting them, fix global item search
 - or version the items : check that it will not be too big
upgrade gems 'bundle update' before starting any dev !
 - try to set very loose version specifiers in Gemfile, let the update specify real version in Gemfile.lock
 - add a rake task to upgrate + test
migrer à rails 3
Use tags to segregate remote specs and features
Write scripts
   - see radiant:upgrade task to see how they managed an update or even git ops through rake
   - a sh script in the dropbox to install git, ruby, gems, bundler and rake
   - a rake setup task in the project to install all dependencies with bundler and apt-get
   - in order to get a single entry point, check to see if push.sh, pull-cms.sh and push-cms.sh could be moved to rake tasks
migrer vers ruby 1.9
Put everything in the repo : thirdparties source code, dev tools, follow up, marketing …
Install windows and all browsers with VirtuaBox

CMS:
factorize pull-cms and push-cms scripts in deployment.rake

Spikes :
Should we use rake scripts instead of sh scripts ?
2 way associations in active record
How to control accessibility in models
Rspec-spies + .ordered, try to add it (wait for rspec 2)
Regarder ce qu'apporte NoSql pour les problèmes de Foreign Keys
Evaluer les tests avec moins de mock
try to launch ci on heroku (might be a problem with db drop ...)

Ongoing changes :
Upgrade gems before every feature
Upgrade radiant gems & extensions before every blog post
