IMPROVEMENTS
------------
Things to do (at least partialy) at the first occasion when coding something arround the subject

WIP
---

TODO
----
- upgrade radiant to the latest version using bundler !
  - merge latest design modifications
- changer mon mot de passe heroku pour ne pas me faire tout piraté si qq1 rentre sur mes sites heroku
- speed up testing
  - launching just a few specs
  - launching just a few features
  - load time see http://rhnh.net/2011/05/28/speeding-up-rails-startup-time & http://www.rubyinside.com/ruby-1-9-3-faster-loading-times-require-4927.html
  - spork (a test runner server)
  - avoid loading spec_helper multiple times http://kpumuk.info/ruby-on-rails/my-top-7-rspec-best-practices/
  - tutorial http://www.rubyinside.com/how-to-rails-3-and-rspec-2-4336.html
- Speed up deployment when integrating : in parallel, or asynchronously on another server
- redesign cms pull and push
  - utiliser des subtree plutot que des subtree-merge (c'est un wrapper par dessus, cf : http://stackoverflow.com/questions/5977234/how-can-i-push-a-part-of-my-git-repo-to-heroku)
  - copier coller
  - rest api sur le cms (plus de lien git du tout)
  - mettre les snippets, layouts et styles dans le git du cms (comme au début)
    - split entre design / écriture d'article
    - marchera peut être mieux qu'au début parce que:
      - le design est stabilisé
      - j'ai un modem 3G
- essayer auto_test_rails
- upgrade gems 'bundle update' before starting any dev !
- completely disable stock test::unit stack from rails
- replace cron heroku addon by scheduler
- comprendre ce qui ne va pas avec le .emacs (pas de iswitch mode, pas de serveur edit-in-emacs)
- utiliser la variable d'environnement URL de heroku pour avoir l'url de l'application
- configurer la variable d'environnement LANG de heroku pour afficher les choses dans la bonne langue
- ajouter un header par defaut aux fichiers créés avec emacs (encoding)
- essayer d'améliorer emacs pour ruby
  http://nsaunders.wordpress.com/2009/11/18/turn-emacs-into-an-ide/
  http://stackoverflow.com/questions/7989090/emacs-ruby-autocomplete-almost-working
  http://stackoverflow.com/questions/4277788/ruby-navigation-in-emacs
  http://ozmm.org/posts/textmate_minor_mode.html
  http://ecb.sourceforge.net/
- ajouter attr_accessible nil par defaut : https://gist.github.com/1978249
- merger script/setup et script/setup-ci tant qu'il n'y a qu'un seul pc de dev sur le projet
- clean up and homogenize usage FactoryGirl and stub_model
  - use the standard FactoryGirl synthax
  - understand how to use FactoryGirl and stub_model together
  - try to use real model instances with stub_model ?
  - use mock_model and mock_model.as_new_record instead of raw mocks
  - decide wether and when to use mock_model and mock or stub_models and FactoryGirl
  - avoid mixing real records and stubs
- faire un matcher pour les path bar
  - peut être deux : un path_bar_element(index, text, url)
  - un autre pour path_bar avec une liste d'elements
- faire un matcher pour les link_to avec du text et une url, faire le tour et l'utiliser partout (checker pour button_to au passage)
- make cucumber steps more high level
- Check the deployment was successful by doing a get to http://app-name.heroku.com and checking the http return status
- add a foreign key from cart_lines -> items
  - move items to a new category instead of deleting them, fix global item search
  - or version the items : check that it will not be too big
- faire un migrate up, migrate down, remigrate up pour valider les migrations dans les 2 sens
- Use tags to segregate remote specs and features
- Would it be possible to classify features with tags instead of directories, ex user & dishes for dish modifications
- Put everything in the repo : thirdparties source code, dev tools, follow up, marketing … maybe I'll need to have a main git repo with submodules
  - faire du ménage dans les trucs qui ne sert en fait à rien
  - voir si il n'y a pas des mode emacs pour remplacer certains tableurs par des modes emacs
- Install windows and all browsers with VirtuaBox
- Make a web site where one can check logs of heroku apps
- Utiliser des modules pour faire des namespaces
- Mettre en place des rcov, heckle et autres dans le script d'intégration continue
  - écrire le specdoc dans autotest
- sortir des choses de models
- améliorer les tests cucumber d'imports
  - Créer un vrai dummy store avec des vrais fichiers pour Cucumber
  - faire un truc pour patcher les fichier auchan_direct offline
  - faire un truc pour que mechanize ne passe pas par le file system pendant les tests
- faire un script 'setup' pour le cms
- dans store_steps.rb, configurer le store via la classe et pas l'instance du cart_api : ça sera plus simple pour les tests
- ajouter un truc pour cleaner les sessions quand on push une nouvelle version : heroku rake db:sessions:clear
- tester org-mode pour mes todo list
- commande emacs pour fermer tous les buffers dans un sous repertoire
- build something to scrap analytics to an email :
  - revenue
  - expenditures
  - conversion rates
- spike 2 way associations in active record : understand how they are added and updated
- Spike how to control accessibility in models
- Spike rspec-spies + .ordered, try to add it (wait for rspec 2)
- Spiker ce qu'apporte NoSql pour les problèmes de Foreign Keys
- Spiker les tests avec moins de mock - try to add an rspec extension creating proxies
  - choisir un test en particulier, le changer et comparer avec l'existant : essayer sur les tests du API Builder
  - regarder ça : http://xtargets.com/2010/03/19/proxy-mocks-with-rspec/
- Spike launching ci on heroku (might be a problem with db drop ...)
- Spike how to test ssl requirements in cucumber and/or local dev : already 3 bugs because of this ! (sign in, cart forward, empty cart)
- Spiker des tests cucumber avec javascript (avec l'order view et l'iframe.onload par exemple)
